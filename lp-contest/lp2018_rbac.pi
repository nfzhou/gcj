import sat.

main =>
    rbac($[users(3),roles(3),perms(3),urs(3),ur(1,1,1),ur(2,1,2),ur(3,1,3),
           rps(3),rp(1,1,1),rp(2,1,2),rp(3,1,3),
	       rhs(3),rh(1,1,2),rh(1,2,3),rh(1,1,3)]).

main([File]) =>
    Fs = read_file_terms(File),
    rbac(Fs).

rbac(Fs) =>
    cl_facts(Fs),
    users(NUs),
    roles(NRs),
    perms(NPs),
    A0 = new_array(NUs,NPs),
    foreach (U in 1..NUs, P in 1..NPs)
        (reach(U,P) -> A0[U,P] = 1;    A0[U,P] = 0)
    end,
    BURs = new_array(NUs,NRs),
    foreach (U in 1..NUs, R in 1..NRs)
        (ur(_,U,R) -> true; BURs[U,R] = 0)
    end,
    BURs :: 0..1,
    BRPs = new_array(NRs,NPs),
    foreach (R in 1..NRs, P in 1..NPs)
        (rp(_,R,P) -> true; BRPs[R,P] = 0)
    end,
    BRPs :: 0..1,
    BRHs = new_array(NRs,NRs),
    foreach (R1 in 1..NRs, R2 in 1..NRs)
        (rh(_,R1,R2) -> true; BRHs[R1,R2] = 0)
    end,
    BRHs :: 0..1,
    foreach (U in 1..NUs, P in 1..NPs)
        A0[U,P] #= sum([BURs[U,R]*BRPs[R,P] : R in 1..NRs]) +
                   sum([BURs[U,R]*BRHs[R,R1]*BRPs[R1,P] : R in 1..NRs, R1 in 1..NRs])
    end,
    To #= sum([BURs[U,R] : U in 1..NUs, R in 1..NRs]) +
          sum([BRPs[R,P] : R in 1..NRs, P in 1..NPs]) +
          sum([BRHs[R1,R2] : R1 in 1..NRs, R2 in 1..NRs]),
    solve([$min(To)],(BURs,BRPs,BRHs)),
    printf("minRoleAssignmentsWithHierarchy(%d).\n",To).

reach(U,P) =>
    ur(_,U,R),
    (rp(_,R,P); rh(_,R,R1),rp(_,R1,P)).
    
